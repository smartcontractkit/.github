name: Setup Postgresql
description:
  Setup postgres docker container via docker-compose, allowing usage of a custom
  command, see https://github.com/orgs/community/discussions/26688
inputs:
  print-logs:
    description: |
      Whether to print the logs of the postgres service to the console and a file.
      Note: This action should be called first without this input set.
    required: false
    default: ""
  print-logs-path:
    description: |
      The directory to print the logs to.
      Note: This input does nothing if `print-logs` is not set to true.
    default: ${{ github.workspace }}

  # Postgres specific inputs, tunes performance
  tmpfs:
    description: |
      Whether to use a tmpfs mount for the postgres data directory.
    default: "false"
    required: false
  optimize-performance:
    description: |
      Whether to optimize the postgres performance settings based on the host resources.
      This sets a few parameters that greatly favour performance over durability.
      Only use in CI or local testing environments.
    default: "false"
    required: false

outputs:
  database-url:
    description: The URL to connect to the postgres database
    value: "postgresql://postgres:postgres@localhost:5432/chainlink_test?sslmode=disable"

runs:
  using: composite
  steps:
    - name: Print Inputs
      shell: bash
      env:
        INPUTS_PRINT_LOGS: ${{ inputs.print-logs }}
        INPUTS_PRINT_LOGS_PATH: ${{ inputs.print-logs-path }}
        INPUTS_TMPFS: ${{ inputs.tmpfs }}
        INPUTS_OPTIMIZE_PERFORMANCE: ${{ inputs.optimize-performance }}
      run: |
        echo "Print Logs: $INPUTS_PRINT_LOGS"
        echo "Print Logs Path: $INPUTS_PRINT_LOGS_PATH"

        echo "Use tmpfs: $INPUTS_TMPFS"
        echo "Optimize performance: $INPUTS_OPTIMIZE_PERFORMANCE"

    - name: Configure Postgres Settings Based on Host Resources
      if:
        ${{ inputs.print-logs != 'true' && inputs.optimize-performance == 'true'
        }}
      shell: bash
      working-directory: ${{ github.action_path }}
      run: |
        ./optimize.sh

    - name: Start postgres service
      if: ${{ inputs.print-logs != 'true' }}
      shell: bash
      working-directory: ${{ github.action_path }}
      env:
        USE_TMPFS: ${{ inputs.tmpfs }}
      run: |
        if [ "${USE_TMPFS}" == "true" ]; then
          echo "Using tmpfs mount for postgres data directory"
          cp docker-compose.tmpfs.yml docker-compose.override.yml
        fi

        echo "-- Docker Compose config --"
        docker compose config

        docker compose up -d

    - name: Wait for postgres service to be healthy
      if: ${{ inputs.print-logs != 'true' }}
      shell: bash
      working-directory: ${{ github.action_path }}
      run: ./wait-for-healthy-postgres.sh

    - name: Print logs
      if: ${{ inputs.print-logs == 'true' }}
      shell: bash
      working-directory: ${{ github.action_path }}
      env:
        LOGS_PATH: ${{ inputs.print-logs-path }}
      run: |
        docker compose logs postgres | tee $LOGS_PATH/postgres_logs.txt
