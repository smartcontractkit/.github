name: ci-sonarqube
description: Add SonarQube to CI for code coverage

inputs:
  # general inputs
  checkout-repo:
    description: "enable git checkout repo"
    required: false
    default: "true"
  checkout-repo-fetch-depth:
    description: "number of commits to fetch"
    required: false
    default: "0"
  # grafana cloud inputs
  metrics-job-name:
    description: "grafana metrics job name"
    required: false
    default: ci-sonarqube
  gc-host:
    description: "grafana cloud hostname"
    required: false
  gc-basic-auth:
    description: "grafana cloud basic auth"
    required: false
  # sonarqube inputs
  sonar-token:
    description: "sonarqube token"
    required: false
  sonar-host-url:
    description: "sonarqube host url"
    required: false
  include-lint:
    description: "enable linting"
    required: false
    default: "false"

runs:
  using: composite
  steps:
    - name: Checkout repo
      if: inputs.checkout-repo == 'true'
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        fetch-depth: ${{ inputs.checkout-repo-fetch-depth }}

    - name: Download all workflow run artifacts
      uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2

    - name: Set SonarQube Report Paths
      id: sonarqube_report_paths
      shell: bash
      run: |
        echo "sonarqube_tests_report_paths=$(find go-test-results -name output.txt | paste -sd "," -)" >> $GITHUB_OUTPUT
        echo "sonarqube_coverage_report_paths=$(find go-test-results -name coverage.txt | paste -sd "," -)" >> $GITHUB_OUTPUT
        if [ "${{ inputs.include-lint }}" == "true" ]; then
          echo "sonarqube_golangci_lint_report_paths=$(find golangci-lint-report -name golangci-lint-report.xml | paste -sd "," -)" >> $GITHUB_OUTPUT
        fi

    - name: SonarQube scan without lint
      if: inputs.include-lint == 'false'
      uses: sonarsource/sonarqube-scan-action@69c1a75940dec6249b86dace6b630d3a2ae9d2a7 # v2.0.1
      with:
        args: >
          -Dsonar.go.tests.reportPaths=${{
          steps.sonarqube_report_paths.outputs.sonarqube_tests_report_paths }}
          -Dsonar.go.coverage.reportPaths=${{
          steps.sonarqube_report_paths.outputs.sonarqube_coverage_report_paths
          }}
      env:
        SONAR_TOKEN: ${{ inputs.sonar-token }}
        SONAR_HOST_URL: ${{ inputs.sonar-host-url }}

    - name: SonarQube scan with lint
      if: inputs.include-lint == 'true'
      uses: sonarsource/sonarqube-scan-action@69c1a75940dec6249b86dace6b630d3a2ae9d2a7 # v2.0.1
      with:
        args: >
          -Dsonar.go.tests.reportPaths=${{ steps.sonarqube_report_paths.outputs.sonarqube_tests_report_paths }}
          -Dsonar.go.coverage.reportPaths=${{ steps.sonarqube_report_paths.outputs.sonarqube_coverage_report_paths }}
          -Dsonar.go.golangci-lint.reportPaths=${{ steps.sonarqube_report_paths.outputs.sonarqube_golangci_lint_report_paths }}
      env:
        SONAR_TOKEN: ${{ inputs.sonar-token }}
        SONAR_HOST_URL: ${{ inputs.sonar-host-url }}

    - name: Collect metrics
      if: always()
      id: collect-gha-metrics
      uses: smartcontractkit/push-gha-metrics-action@d1618b772a97fd87e6505de97b872ee0b1f1729a # v2.0.2
      with:
        basic-auth: ${{ inputs.gc-basic-auth }}
        hostname: ${{ inputs.gc-host }}
        this-job-name: ${{ inputs.metrics-job-name }}
      continue-on-error: true
