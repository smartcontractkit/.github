name: cicd-changesets
description: "changesets"

inputs:
  # general inputs
  checkout-repo-fetch-depth:
    description: "number of commits to fetch"
    required: false
    default: "0"
  git-user:
    description: ""
    required: false
    default: app-token-issuer-infra-releng[bot]@users.noreply.github.com
  git-email:
    description: ""
    required: false
    default: app-token-issuer-infra-releng[bot]
  # aws inputs
  aws-role-duration-seconds:
    description: ""
    required: false
    default: "900"
  aws-region:
    description: ""
    required: false
  aws-role-arn:
    description: ""
    required: false
  aws-lambda-url:
    description: ""
    required: false
  # nodejs inputs
  node-version-file:
    description: ""
    required: false
    default: ".tool-versions"
  pnpm-version:
    description: ""
    required: false
    default: "^8.0.0"
  pnpm-use-cache:
    description: "Use cache for pnpm"
    required: false
    default: "true"
  # grafana inputs
  metrics-job-name:
    description: "grafana metrics job name"
    required: false
    default: cicd-changesets
  gc-host:
    description: "grafana hostname"
    required: false
  gc-basic-auth:
    description: "grafana basic auth"
    required: false
  gc-org-id:
    description: "grafana org/tenant id"
    required: false
  # changesets inputs
  changesets-publish-cmd:
    description: ""
    required: false
    default: pnpm run ci:changeset:publish
  changesets-version-cmd:
    description: ""
    required: false
    default: pnpm run ci:changeset:version
  changesets-create-gh-release:
    description: ""
    required: false
    default: "false"
  pr-title:
    description: "title of the PR"
    required: false
  pr-draft:
    description: "whether to put the PR in draft mode or not"
    required: false
    default: "false"
outputs:
  published:
    description:
      A boolean value to indicate whether a publishing is happened or not
    value: ${{ steps.changesets.outputs.published }}
  publishedPackages:
    description: >
      A JSON array to present the published packages. The format is `[{"name":
      "@xx/xx", "version": "1.2.0"}, {"name": "@xx/xy", "version": "0.8.9"}]`
    value: ${{ steps.changesets.outputs.publishedPackages }}
  hasChangesets:
    description:
      A boolean about whether there were changesets. Useful if you want to
      create your own publishing functionality.
    value: ${{ steps.changesets.outputs.hasChangesets }}
  pullRequestNumber:
    description: The pull request number that was created or updated
    value: ${{ steps.changesets.outputs.pullRequestNumber }}

runs:
  using: composite
  steps:
    - name: Assume aws gati role
      uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
      with:
        role-to-assume: ${{ inputs.aws-role-arn }}
        role-duration-seconds: ${{ inputs.aws-role-duration-seconds }}
        aws-region: ${{ inputs.aws-region }}
        mask-aws-account-id: true

    - name: Get github token from gati
      id: get-gh-token
      uses: smartcontractkit/chainlink-github-actions/github-app-token-issuer@main
      with:
        url: ${{ inputs.aws-lambda-url }}

    - name: Checkout repo
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        fetch-depth: ${{ inputs.checkout-repo-fetch-depth }}
        token: ${{ steps.get-gh-token.outputs.access-token }}

    - name: Set git config
      shell: bash
      run: |
        git config user.email "${{ inputs.git-email }}"
        git config user.name "${{ inputs.git-user }}"

    - name: Setup nodejs
      uses: smartcontractkit/.github/actions/setup-nodejs@main
      with:
        node-version-file: ${{ inputs.node-version-file }}
        pnpm-version: ${{ inputs.pnpm-version }}
        use-cache: ${{ inputs.pnpm-use-cache }}
        run-install: "true"

    - name: Run changesets
      id: changesets
      uses: smartcontractkit/.github/actions/signed-commits@0cd5c6fa8a1af642a74a11d0ba26eb92f17b5865 # changesets-signed-commits@1.1.0
      env:
        GITHUB_TOKEN: ${{ steps.get-gh-token.outputs.access-token }}
      with:
        publish: ${{ inputs.changesets-publish-cmd }}
        version: ${{ inputs.changesets-version-cmd }}
        createGithubReleases: ${{ inputs.changesets-create-gh-release }}
        setupGitUser: false
        title: ${{ inputs.pr-title }}
        prDraft: ${{ inputs.pr-draft }}

    - name: Check changesets output
      shell: bash
      run: |
        echo "published: ${{ steps.changesets.outputs.published }}"
        echo "publishedPackages: ${{ steps.changesets.outputs.publishedPackages }}"

    - name: Collect metrics
      if: always()
      id: collect-gha-metrics
      uses: smartcontractkit/push-gha-metrics-action@e34ae8a4df60f4d9fdef1e32a69747bab130840e # v2.2.0
      with:
        basic-auth: ${{ inputs.gc-basic-auth }}
        hostname: ${{ inputs.gc-host }}
        org-id: ${{ inputs.gc-org-id}}
        this-job-name: ${{ inputs.metrics-job-name }}
      continue-on-error: true
