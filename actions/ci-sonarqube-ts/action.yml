name: ci-sonarqube-ts
description: Add SonarQube to CI for code coverage

inputs:
  # general inputs
  checkout-repo:
    description: "enable git checkout repo"
    required: false
    default: "true"
  checkout-repo-fetch-depth:
    description: "number of commits to fetch"
    required: false
    default: "0"
  # sonarqube inputs
  sonar-token:
    description: "sonarqube token"
    required: false
  sonar-host-url:
    description: "sonarqube host url"
    required: false
  test-report-workflow:
    description: "workflow file name which uploaded test report artifacts"
    required: false
  test-report-artifact:
    description: "Name of artifact containing junit test and coverage results"
    required: false
    default: "ts-test-results"
  junit-xml-report-path:
    description: "paths to junit test results in xml format"
    requried: false
    default: "junit.xml"
  typescript-lcov-report-name:
    description: "lcov test coverage report name with extension"
    requried: false
    default: "lcov.info"
  lint-report-workflow:
    description: "workflow file name which uploaded lint report artifacts"
    required: false
  lint-report-artifact:
    description: "Name of artifact containing eslint report"
    requried: false
    default: "ts-lint-results"
  eslint-json-report:
    description: "Eslint report name in json format"
    requried: false
    default: "eslint-report.json"
  include-lint:
    description: "enable linting"
    required: false
    default: "false"

runs:
  using: composite
  steps:
    - name: Checkout repo
      if: inputs.checkout-repo == 'true'
      uses: actions/checkout@v4
      with:
        fetch-depth: ${{ inputs.checkout-repo-fetch-depth }}

    - name: Download all reports (no test-report-workflow)
      id: all
      if: inputs.test-report-workflow == ''
      uses: actions/download-artifact@v4

    - name: Download all reports (no lint-report-workflow)
      if: steps.all.outcome != 'success' && inputs.lint-report-workflow == ''
      uses: actions/download-artifact@v4

    - name: Download test-report artifact using workflow file name
      if: inputs.test-report-workflow != ''
      uses: dawidd6/action-download-artifact@ac66b43f0e6a346234dd65d4d0c8fbb31cb316e5 # v11
      with:
        workflow: ${{ inputs.test-report-workflow }}
        name: ${{ inputs.test-report-artifact }}
        search_artifacts: true
        workflow_conclusion: "" # ignore workflow status to let the latest artifact be downloaded
        if_no_artifact_found: warn

    - name: Download lint-report artifact using workflow file name
      if: inputs.lint-report-workflow != ''
      uses: dawidd6/action-download-artifact@ac66b43f0e6a346234dd65d4d0c8fbb31cb316e5 # v11
      with:
        workflow: ${{ inputs.lint-report-workflow }}
        name: ${{ inputs.lint-report-artifact }}
        search_artifacts: true
        workflow_conclusion: ""
        if_no_artifact_found: warn

    - name: Set SonarQube Report Paths
      id: sonarqube_report_paths
      shell: bash
      run: |
        sonarqube_coverage_report_paths=$(find -type f -name '*${{ inputs.typescript-lcov-report-name }}' -printf "%p,")
        echo "sonarqube_coverage_report_paths=$sonarqube_coverage_report_paths"
        sonarqube_lint_report_paths=$(find -type f -name '*${{ inputs.eslint-json-report }}' -printf "%p,") >> GITHUB_OUTPUT
        echo "sonarqube_lint_report_paths=$sonarqube_lint_report_paths"
        ARGS=""
        ARGS="$ARGS -Dsonar.typescript.lcov.reportPaths=$sonarqube_coverage_report_paths"
        ARGS="$ARGS -Dsonar.eslint.reportPaths=$sonarqube_lint_report_paths"
        echo "Final SONARQUBE_ARGS: $ARGS"
        echo "SONARQUBE_ARGS=$ARGS" >> $GITHUB_ENV

    - name: Update ESLint report symlinks
      continue-on-error: true
      shell: bash
      run:
        sed -i 's+/home/runner/work/${{ github.event.repository.name }}/${{
        github.event.repository.name }}/+/github/workspace/+g' ${{
        steps.sonarqube_report_paths.outputs.sonarqube_lint_report_paths }}

    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@0c0f3958d90fc466625f1d1af1f47bddd4cc6bd1 # v3.0.0
      with:
        args: ${{ env.SONARQUBE_ARGS }}
      env:
        SONAR_TOKEN: ${{ inputs.sonar-token }}
        SONAR_HOST_URL: ${{ inputs.sonar-host-url }}
