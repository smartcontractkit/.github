name: cicd-build-publish-docker
description: "Reusable action to build and push generic docker images"

inputs:
  # general inputs
  checkout-repo:
    description: "enable git checkout repo"
    required: false
    default: "true"
  checkout-repo-fetch-depth:
    description: "number of commits to fetch"
    required: false
    default: "0"
  ecr-repo-name:
    required: true
    description:
      "Name of the ecr repo, without ECR registry host path. e.g. releng-app"
  registry-type:
    required: false
    default: "private"
    description:
      "Is it a public ecr repo or private? Available options
      ['private','public']"
  registry-alias:
    required: false
    description: "ECR Public Repo alias, required only for public repos"
  tags:
    required: false
    description: "Tags input for the docker metadata action"
    # Default tags based on the Chainlink best practices
    # It assumes tags are immutable
    default: |
      type=sha,prefix=pr=,event=pr
      type=ref,event=tag
  publish:
    description: Publish docker image
    required: false
    default: "false"
  dockerfile:
    description: Path to dockerfile
    required: false
    default: "Dockerfile"
  multi-platform:
    description: Whether to build for multiple platforms
    required: false
    default: "false"
  platforms:
    description:
      "List of target platforms for build, required when multi-platform option
      is used."
    required: false
  # aws inputs
  aws-region:
    description:
      "The region for pushing docker image. For public images ecr-login requires
      it to be us-east-1"
    required: false
    default: "us-east-1"
  aws-account-number:
    description: "Account number for pushing docker image"
    required: true
  aws-role-arn:
    description: "AWS role ARN for pushing docker image"
    required: true

runs:
  using: composite
  steps:
    - name: Checkout repo
      if: inputs.checkout-repo == 'true'
      uses: actions/checkout@v4.2.1
      with:
        fetch-depth: ${{ inputs.checkout-repo-fetch-depth }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
      with:
        role-to-assume: ${{ inputs.aws-role-arn }}
        role-duration-seconds: 900
        aws-region: ${{ inputs.aws-region }}
        mask-aws-account-id: true

    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
      with:
        registry-type: ${{ inputs.registry-type }}
        registries:
          ${{ inputs.registry-type == 'private' && inputs.aws-account-number ||
          '' }}
    - name: Set up Docker Buildx
      if: inputs.multi-platform == 'true'
      id: buildx
      uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3.8.0
      with:
        version: latest

    - name: Docker meta
      id: docker_meta
      uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
      env:
        aliasSegment:
          ${{ inputs.registry-type=='public' && format('{0}/',
          inputs.registry-alias) }}
      with:
        images:
          ${{ steps.login-ecr.outputs.registry }}/${{ env.aliasSegment }}${{
          inputs.ecr-repo-name }}

        tags: ${{ inputs.tags }}

        flavor: |
          latest=false

    - name: Build and push
      id: build-push
      uses: docker/build-push-action@5cd11c3a4ced054e52742c5fd54dca954e0edd85 # v6.7.0
      with:
        push: ${{ inputs.publish }}
        file: ${{ inputs.dockerfile }}
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
        platforms: ${{ inputs.platforms }}
