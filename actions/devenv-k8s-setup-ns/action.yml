name: "Setup Devenv K8s environment Namespace"
description:
  "Composite action for setting up a Griddle Dev Ephemeral Environment namespace"
inputs:
  ns-ttl:
    default: "1h"
    description:
      "Namespace TTL, which defines how long a namespace will remain alive after
      creation."
    required: false
  ns-name-prefix:
    default: "devenv-ci"
    description: "Namespace name prefix for devenv environment"
    required: false
  ns-name-override:
    default: ""
    description: "Namespace name override for devenv environment."
    required: false
  devenv-repo-ref:
    default: "main"
    required: false
    description: Useful for testing updates in devenv repo
  github-token:
    description:
      "The `GITHUB_TOKEN` issued for the workflow. It is required unless the
      action is called from the devenv repo."
    default: ${{ github.token }}
    required: false
  chainlink-team:
    required: true
    description: |
      Specify a relevant value for tagging resources and attributing
      costs to the correct team.
  chainlink-product:
    required: true
    description: |
      Specify a relevant value for tagging resources and attributing
      costs to the correct product.
  # inputs for connecting with k8s cluster via tailscale
  tailscale-oauth-client-id:
    description: "Tailscale OAuth client ID for authentication"
    required: true
  tailscale-oauth-secret:
    description: "Tailscale OAuth secret for authentication"
    required: true
  tailscale-tags:
    description:
      "Tailscale tags to apply to the connection (e.g., tag:crib-sdk-gha)"
    required: true
  aws-oidc-role:
    description: "AWS IAM role ARN to assume using OIDC"
    required: true
  aws-region:
    description: "AWS region where the EKS cluster is located"
    required: true
  eks-cluster-name:
    description: "Name of the EKS cluster to connect to"
    required: true
  tailscale-endpoint:
    description: "Tailscale endpoint URL for the EKS cluster (without https://)"
    required: true
outputs:
  namespace:
    description: "Kubernetes namespace created by setup steps"
    value: ${{ steps.generate-ns-name.outputs.devenv-namespace }}

runs:
  using: "composite"
  steps:
    - name: Setup K8s with tailscale
      # todo: update ref after tailscale action is released
      uses: smartcontractkit/.github/actions/k8s-tailscale-connect@k8s-tailscale-connect/0.1.0
      with:
        tailscale-oauth-client-id: ${{ inputs.tailscale-oauth-client-id }}
        tailscale-oauth-secret: ${{ inputs.tailscale-oauth-secret }}
        tailscale-tags: ${{ inputs.tailscale-tags }}
        tailscale-endpoint: ${{ inputs.tailscale-endpoint }}
        aws-oidc-role: ${{ inputs.aws-oidc-role }}
        aws-region: ${{ inputs.aws-region }}
        eks-cluster-name: ${{ inputs.eks-cluster-name }}

    - name: Generate Devenv Namespace Name, configure variables
      id: generate-ns-name
      shell: bash
      env:
        NS_NAME_PREFIX: ${{ inputs.ns-name-prefix }}
        NS_NAME_OVERRIDE: ${{ inputs.ns-name-override }}
        PR_NUMBER: ${{ github.event.number }}
        WORKFLOW_JOB: ${{ github.job }}
        COMMIT_SHA: ${{ github.sha }}
        WORKFLOW_RUN_NUMBER: ${{ github.run_number }}
      run: |
        REPO_NAME=$(basename "$GITHUB_REPOSITORY")
        BRANCH_NAME="${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"

        # configure namespace
        if [ -z "$NS_NAME_OVERRIDE" ]; then
          echo "devenv-namespace=${NS_NAME_PREFIX}-$(uuidgen | cut -c1-6)" | tee -a "$GITHUB_OUTPUT"
        else
          echo "devenv-namespace=${NS_NAME_OVERRIDE}" | tee -a "$GITHUB_OUTPUT"
        fi

        # configure rest of variables
        echo "pr-number=${PR_NUMBER}" | tee -a "$GITHUB_OUTPUT"
        echo "workflow-job=${WORKFLOW_JOB}" | tee -a "$GITHUB_OUTPUT"
        echo "repo-name=${REPO_NAME}" | tee -a "$GITHUB_OUTPUT"
        echo "branch-name=${BRANCH_NAME}" | tee -a "$GITHUB_OUTPUT"
        echo "commit-sha=${COMMIT_SHA}" | tee -a "$GITHUB_OUTPUT"
        echo "workflow-run-number=${WORKFLOW_RUN_NUMBER}" | tee -a "$GITHUB_OUTPUT"

    - name: Checkout devenv repo
      uses: actions/checkout@v4
      with:
        repository: "smartcontractkit/devenv"
        ref: ${{ inputs.devenv-repo-ref }}
        path: "${{ github.workspace }}/devenv"
        token: ${{ inputs.github-token }}

    - name: Create and label Devenv namespace
      shell: bash
      env:
        DEVENV_NAMESPACE:
          "${{ steps.generate-ns-name.outputs.devenv-namespace }}"
        NS_NAME_OVERRIDE: ${{ inputs.ns-name-override }}
        CHAINLINK_TEAM: ${{ inputs.chainlink-team }}
        CHAINLINK_PRODUCT: ${{ inputs.chainlink-product }}
        BRANCH_NAME: ${{ steps.generate-ns-name.outputs.branch-name }}
        COMMIT_SHA: ${{ steps.generate-ns-name.outputs.commit-sha }}
        PR_NUMBER: ${{ steps.generate-ns-name.outputs.pr-number || 'none' }}
        REPO_NAME: ${{ steps.generate-ns-name.outputs.repo-name }}
        WORKFLOW_JOB: ${{ steps.generate-ns-name.outputs.workflow-job }}
        WORKFLOW_RUN_NUMBER:
          ${{ steps.generate-ns-name.outputs.workflow-run-number }}
        NS_TTL: ${{ inputs.ns-ttl }}
      run: |
        # a valid label must be an empty string or consist of alphanumeric characters,
        # '-', '_' or '.', and must start and end with an alphanumeric character
        # (e.g. 'MyValue',  or 'my_value',  or '12345', regex used for validation is
        # '(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?')
        sanitized_branch=$(echo "${BRANCH_NAME}" \
          | sed 's/[^a-zA-Z0-9._-]/_/g' | cut -c1-63 | sed 's/[._-]$//')

        # Validate that chainlink-team and chainlink-product inputs adhere to the Kubernetes label format.
        if [[ ! "${CHAINLINK_TEAM}" =~ ^[a-zA-Z0-9_.-]+$ ]] || [[ "${CHAINLINK_TEAM}" -gt 63 ]] || [[ "${CHAINLINK_TEAM}" =~ ^\. ]] || [[ "${CHAINLINK_TEAM}" =~ \.$ ]]; then
          echo "Invalid value for chainlink-team label: ${CHAINLINK_TEAM}. Must be up to 63 characters, contain only letters, numbers, hyphens, underscores, and dots, and cannot start or end with a dot."
          exit 1
        fi
        if [[ ! "${CHAINLINK_PRODUCT}" =~ ^[a-zA-Z0-9_.-]+$ ]] || [[ "${CHAINLINK_PRODUCT}" -gt 63 ]] || [[ "${CHAINLINK_PRODUCT}" =~ ^\. ]] || [[ "${CHAINLINK_PRODUCT}" =~ \.$ ]]; then
          echo "Invalid value for chainlink-product label: ${CHAINLINK_PRODUCT}. Must be up to 63 characters, contain only letters, numbers, hyphens, underscores, and dots, and cannot start or end with a dot."
          exit 1
        fi

        overwrite=false
        echo "Creating ${DEVENV_NAMESPACE} Kubernetes namespace.."
        if [[ -z "$NS_NAME_OVERRIDE" ]]; then
          kubectl create ns "${DEVENV_NAMESPACE}"
        else
          overwrite=true
          kubectl get ns "${DEVENV_NAMESPACE}" || kubectl create ns "${DEVENV_NAMESPACE}"
        fi

        kubectl label namespace --overwrite=$overwrite "${DEVENV_NAMESPACE}" \
          branch="${sanitized_branch}" \
          commit="${COMMIT_SHA}" \
          pr-number="${PR_NUMBER}" \
          repo="${REPO_NAME}" \
          workflow-job="${WORKFLOW_JOB}" \
          workflow-run-number="${WORKFLOW_RUN_NUMBER}"

        kubectl label namespace --overwrite=true "${DEVENV_NAMESPACE}" \
          cleanup.kyverno.io/ttl="${NS_TTL}"

        echo "Kubernetes namespace [${DEVENV_NAMESPACE}] successfully labeled:"
        kubectl get namespace "${DEVENV_NAMESPACE}" --show-labels

    - uses: smartcontractkit/.github/actions/setup-golang@setup-golang/1.1.0
      with:
        go-version-file: "${{ github.workspace }}/devenv/go.mod"
        go-cache-dep-path: "${{ github.workspace }}/devenv/**/*.sum"

    - name: Setup griddle-devenv CLI
      shell: bash
      working-directory: ./devenv
      run: |
        go env
        go build -o dctl main.go
        ./dctl deps
