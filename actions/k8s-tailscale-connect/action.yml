name: "Connect to Kubernetes via Tailscale"
description:
  "Connects to a Kubernetes cluster through Tailscale network, configures AWS
  credentials via OIDC, and sets up kubeconfig"
author: "Your Organization"

inputs:
  tailscale-oauth-client-id:
    description: "Tailscale OAuth client ID for authentication"
    required: true
  tailscale-oauth-secret:
    description: "Tailscale OAuth secret for authentication"
    required: true
  tailscale-tags:
    description: "Tailscale tags to apply to the connection (e.g., tag:example)"
    required: true
  aws-oidc-role:
    description: "AWS IAM role ARN to assume using OIDC"
    required: true
  aws-region:
    description: "AWS region where the EKS cluster is located"
    required: true
  eks-cluster-name:
    description: "Name of the EKS cluster to connect to"
    required: true
  tailscale-endpoint:
    description: "Tailscale endpoint URL for the EKS cluster (without https://)"
    required: true

runs:
  using: "composite"
  steps:
    - name: Connect to Tailscale
      # v3
      uses: tailscale/github-action@7bdbdbb51995cb7a885cd660b5af1bb686fdd2ce
      with:
        oauth-client-id: ${{ inputs.tailscale-oauth-client-id }}
        oauth-secret: ${{ inputs.tailscale-oauth-secret }}
        tags: ${{ inputs.tailscale-tags }}

    - name: Configure AWS credentials using OIDC
      uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
      with:
        role-to-assume: ${{ inputs.aws-oidc-role }}
        aws-region: ${{ inputs.aws-region }}

    - name: Setup Kubeconfig for Tailscale
      shell: bash
      run: |
        echo "::debug::Getting kubeconfig for cluster ${{ inputs.eks-cluster-name }}"
        aws eks update-kubeconfig --name "${{ inputs.eks-cluster-name }}" --region "${{ inputs.aws-region }}"

        # Get cluster ARN for modifying kubeconfig
        CLUSTER_ARN=$(aws eks describe-cluster --name "${{ inputs.eks-cluster-name }}" --region "${{ inputs.aws-region }}" --query "cluster.arn" --output text)
        echo "::add-mask::${CLUSTER_ARN}"

        echo "::debug::Configuring kubeconfig to use Tailscale endpoint"

        # Set the server to the Tailscale endpoint instead of the public endpoint
        kubectl config set clusters."$CLUSTER_ARN".server "https://${{ inputs.tailscale-endpoint }}"

        # Remove certificate-authority-data as it's for the public endpoint, not the Tailscale endpoint
        kubectl config unset clusters."$CLUSTER_ARN".certificate-authority-data

        echo "::notice::Successfully configured kubectl to use Tailscale endpoint for cluster ${{ inputs.eks-cluster-name }}"

branding:
  icon: "cloud"
  color: "blue"
