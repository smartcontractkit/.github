name: manifest-build
description: "Builds all manifest models and uploads them to a specified cache"

inputs:
  # general inputs --------------------------------
  add-packages:
    description: "Additional packages to build on top of the declared check packages (space separated) - not used if setup-only=true"
    required: false
    default: ""
  
 # cache inputs ----------------------------------
  cache-url:
    description: "Nix cache URL"
    required: false
    default: ""
  cache-privkey:
    description: "Nix cache binary private signing key - not used if setup-only=true"
    required: false
    default: ""

  # github inputs ---------------------------------
  github-token:
    description: "GitHub auth token for private repos (if needed)"
    required: false
    default: ""

  # grafana inputs --------------------------
  metrics-job-name:
    description: "grafana metrics job name"
    required: false
    default: manifest-build
  gc-host:
    description: "grafana hostname"
    required: false
  gc-basic-auth:
    description: "grafana basic auth"
    required: false
  gc-org-id:
    description: "grafana org/tenant id"
    required: false

runs:
  using: composite
  steps:
    - uses: MrSquaare/ssh-setup-action@7bfdda6ef6839504e3a5b2625ad971b17461a0db # v3
      with:
        host: github.com
        private-key: ${{ inputs.github-token }}

    - name: Run all builds
      shell: bash
      run: |
        nix flake check

    - name: Get models from flake check
      shell: bash
      id: getModels
      run: |
        # parse models from the flake check
        PKGS=$(nix flake show --json --allow-import-from-derivation | jq -r '.checks | .[] | keys[]' | sort -u | tr '\n' ' ')
        PKGS+=" ${{ inputs.add-packages }}" # append packages specified by inputs
        echo "pkgs=$PKGS" >> $GITHUB_OUTPUT
    - name: Calculate output + derivation paths
      shell: bash
      id: buildPaths
      run: |
        PKGS=()
        for key in ${{ steps.getModels.outputs.pkgs }}; do
            PKGS+=(".#\"$key\"") # build model name with path - example: .#mf
        done

        # get runtime output
        PATHS=$(nix derivation show $PKGS | jq -r '.[] | .outputs | .[] | .path' | tr '\n' ' ')

        # # experimental get build time derivation
        # # get build time derivation - does not copy additional build-time dependencies
        # # assumption that other build-time dependencies are available through other nix caches
        # PATHS+=" $(nix derivation show $PKGS | jq -r 'keys[]' | tr '\n' ' ')"
        
        echo "paths=$PATHS" >> $GITHUB_OUTPUT
    - name: Sign all paths locally
      shell: bash
      run: |
        echo "${{ inputs.cache-privkey }}" >> priv.pem
        nix store sign -k priv.pem --verbose ${{ steps.buildPaths.outputs.paths }}
    - name: Copy all paths to bucket
      shell: bash
      run: |
        nix copy --verbose --narinfo-cache-positive-ttl 0 --to ${{ inputs.cache-url }} ${{ steps.buildPaths.outputs.paths }}

    - name: Collect metrics
      if: always()
      id: collect-gha-metrics
      uses: smartcontractkit/push-gha-metrics-action@0281b09807758be1dcc41651e44e62b353808c47 # v2.1.0
      with:
        basic-auth: ${{ inputs.gc-basic-auth }}
        hostname: ${{ inputs.gc-host }}
        org-id: ${{ inputs.gc-org-id }}
        this-job-name: ${{ inputs.metrics-job-name }}
      continue-on-error: true
