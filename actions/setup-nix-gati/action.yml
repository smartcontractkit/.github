name: setup-nix-gati
description: "Setup the environment for Nix using GATI"

inputs:
  # general inputs
  aws-role-arn:
    description: ARN of role capable of getting token from GATI
    required: true
  aws-lambda-url:
    description: URL of GATI lambda function
    required: true
  aws-region:
    description: AWS region
    required: true
  aws-role-duration-seconds:
    description: Duration of role in seconds
    required: false
    default: "900"
  enable-magic-cache:
    description: "Enable magic nix cache"
    required: false
    default: "false"

runs:
  using: composite
  steps:
    - name: Setup GitHub token
      id: setup-github-token
      uses: smartcontractkit/.github/actions/setup-github-token@ef78fa97bf3c77de6563db1175422703e9e6674f # setup-github-token@0.2.1
      with:
        aws-role-arn: ${{ inputs.aws-role-arn }}
        aws-lambda-url: ${{ inputs.aws-lambda-url }}
        aws-region: ${{ inputs.aws-region }}
        aws-role-duration-seconds: ${{ inputs.aws-role-duration-seconds }}

    - name: Configure GitHub token from GATI
      shell: bash
      run: |
        # redirects ssh url to https with the token
        git config --global \
          url."https://x-access-token:${{ steps.setup-github-token.outputs.access-token }}@github.com/smartcontractkit/".insteadOf \
          "ssh://git@github.com/smartcontractkit/"

    - uses: cachix/install-nix-action@17fe5fb4a23ad6cbbe47d6b3f359611ad276644c # v31
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          sandbox = true # force sandbox for all OS (normally disabled for macOS)

    - name: use magic nix cache
      if: inputs.enable-magic-cache == 'true'
      uses: DeterminateSystems/magic-nix-cache-action@b46e247b898aa56e6d2d2e728dc6df6c84fdb738 #v7
