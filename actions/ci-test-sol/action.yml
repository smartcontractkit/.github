name: ci-test-sol
description: Lint solidity contracts

inputs:
  # general inputs
  checkout-repo:
    description: "enable git checkout repo"
    required: false
    default: "true"
  checkout-repo-fetch-depth:
    description: "number of commits to fetch"
    required: false
    default: "0"
  check-only-affected:
    description: ""
    required: false
    default: "false"
  base-ref:
    description: ""
    required: false
    default: main
  # foundry inputs
  foundry-version:
    description: ""
    required: false
    default: nightly
  forge-build-args:
    description: ""
    required: false
    default: --sizes
  forge-test-args:
    description: ""
    required: false
    default: -vvv
  forge-snapshot-args:
    description: ""
    required: false
    default: --check
  forge-coverage-args:
    description: ""
    required: false
    default: "--report lcov"
  # grafana inputs
  metrics-job-name:
    description: "grafana metrics job name"
    required: false
    default: ci-test-sol
  gc-host:
    description: "grafana hostname"
    required: false
  gc-basic-auth:
    description: "grafana basic auth"
    required: false
  gc-org-id:
    description: "grafana org/tenant id"
    required: false
  # nodejs inputs
  node-version-file:
    description: ""
    required: false
    default: ".tool-versions"
  pnpm-version:
    description: ""
    required: false
    default: "^8.0.0"

runs:
  using: composite
  steps:
    - name: Checkout repo
      if: inputs.checkout-repo == 'true'
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        fetch-depth: ${{ inputs.checkout-repo-fetch-depth }}

    - name: Setup nodejs
      uses: smartcontractkit/.github/actions/setup-nodejs@main
      with:
        node-version-file: ${{ inputs.node-version-file }}
        pnpm-version: ${{ inputs.pnpm-version }}
        use-cache: "true"
        run-install: "true"

    - name: Setup foundry
      uses: foundry-rs/foundry-toolchain@8f1998e9878d786675189ef566a2e4bf24869773 # v1.2.0
      with:
        version: ${{ inputs.foundry-version }}

    - name: Run forge version
      shell: bash
      run: forge --version

    - name: Run build
      if: inputs.check-only-affected != 'true'
      shell: bash
      run: pnpm run build ${{ inputs.forge-build-args }}

    - name: Run build affected
      if: inputs.check-only-affected == 'true'
      shell: bash
      run:
        pnpm run build:affected --base=${{ inputs.base-ref }} ${{
        inputs.forge-build-args }}

    - name: Run test
      if: inputs.check-only-affected != 'true'
      shell: bash
      run: pnpm run test ${{ inputs.forge-test-args }}

    - name: Run test affected
      if: inputs.check-only-affected == 'true'
      shell: bash
      run:
        pnpm run test:affected --base=${{ inputs.base-ref }} ${{
        inputs.forge-test-args }}

    - name: Run snapshot
      if: inputs.check-only-affected != 'true'
      shell: bash
      run: pnpm run snapshot ${{ inputs.forge-snapshot-args }}

    - name: Run snapshot affected
      if: inputs.check-only-affected == 'true'
      shell: bash
      run:
        pnpm run snapshot:affected --base=${{ inputs.base-ref }} ${{
        inputs.forge-snapshot-args }}

    - name: Run coverage
      if: inputs.check-only-affected != 'true'
      shell: bash
      run: pnpm run coverage ${{ inputs.forge-coverage-args }}

    - name: Run coverage affected
      if: inputs.check-only-affected == 'true'
      shell: bash
      run:
        pnpm run coverage:affected --base=${{ inputs.base-ref }} ${{
        inputs.forge-coverage-args }}

    - name: Collect metrics
      if: always()
      id: collect-gha-metrics
      uses: smartcontractkit/push-gha-metrics-action@e34ae8a4df60f4d9fdef1e32a69747bab130840e # v2.2.0
      with:
        basic-auth: ${{ inputs.gc-basic-auth }}
        hostname: ${{ inputs.gc-host }}
        org-id: ${{ inputs.gc-org-id}}
        this-job-name: ${{ inputs.metrics-job-name }}
      continue-on-error: true
