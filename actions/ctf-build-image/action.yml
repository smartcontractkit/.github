name: ctf-build-image
description: "Common action for building chainlink test images"

inputs:
  # Docker inputs
  dockerfile:
    required: true
    description: The dockerfile to use to build the image with

  docker-additional-build-args:
    required: false
    description: |
      Additional build args to pass to the docker build command.
      These will be appended to the default build args.
      Example: |
        GO_COVER_FLAG=true
        CUSTOM_ARG=value

  image-tag:
    required: false
    description: The tag to use for the image.
    default: sha-${{ github.sha }}

  # Registry/ECR inputs
  docker-registry-url:
    description: |
      The docker registry to push the image to.
      Required if `docker-push` is true.
    required: false

  docker-repository-name:
    description: |
      The name of the docker repository to push the image to.
      Required if `docker-push` is true.
    required: false

  docker-push:
    description: |
      Whether to push the image to the registry.
      If false, the image will not be pushed. Defaults to true.
    required: false
    default: true

  # AWS inputs
  aws-account-number:
    description: |
      The AWS account number for the ECR registry.
      Required if `docker-push` is true.
    required: false

  aws-region:
    description: |
      The AWS region to use for the ECR registry.
      Required if `docker-push` is true.
    required: false

  aws-role-arn:
    description: |
      The AWS role ARN to assume for pushing the image to ECR.
      Required if `docker-push` is true.
    required: false

  # GATI inputs
  gati-role-arn:
    description: |
      The GATI role ARN to assume for granting read access to private repositories.
      If not specified, the action will not attempt to grant access.
    required: false

  gati-lambda-url:
    description: |
      The GATI Lambda URL to use for granting read access to private repositories.
      If not specified, the action will not attempt to grant access.
    required: false

  gati-aws-region:
    description: |
      Optional: The AWS region to use for GATI.
    required: false
    default: "us-west-2"

  # Dependency/plugin override inputs
  plugin-manifest-overrides:
    required: false
    description: |
      A list of overrides for the plugin manifest to replace specific plugins.
      Format: "plugin=gitRef". Multiple plugins can be specified, one per line.
      If not specified, no overrides will be applied.

      For example:
      cosmos=foo
      starknet=bar

      Would update the plugin manifest at `plugins/plugins.public.yaml`, replacing:
        - plugins.cosmos.gitRef with `ref`.
        - plugins.starknet.gitRef with `bar`.

      Note: This will only update existing entries.

  go-get-overrides:
    required: false
    description: |
      A list of overrides for go get commands to replace specific dependencies.
      Format: "dependency=sha". Multiple dependencies can be specified, one per line.
      If not specified, no overrides will be applied.

      For example:
      chainlink-solana=abc123
      chainlink-evm=def456

      Would perform:
      go get github.com/smartcontractkit/chainlink-solana@abc123
      go get github.com/smartcontractkit/chainlink-evm@def456

runs:
  using: composite
  steps:
    - uses: actions/setup-go@v5
      with:
        go-version-file: "go.mod"
        check-latest: true
        cache: false

    - name: Setup GitHub token using GATI
      if: inputs.gati-role-arn != '' && inputs.gati-lambda-url != ''
      id: github-token
      uses: smartcontractkit/.github/actions/setup-github-token@setup-github-token/1.0.0
      with:
        aws-role-arn: ${{ inputs.gati-role-arn }}
        aws-lambda-url: ${{ inputs.gati-lambda-url }}
        aws-region: ${{ inputs.gati-aws-region }}
        aws-role-duration-seconds: "1800"
        set-git-config: "true"

    - name: Process go get overrides
      shell: bash
      env:
        GO_OVERRIDES: ${{ inputs.go-get-overrides }}
        ACTIONS_PATH: ${{ github.action_path }}
      run: ${ACTIONS_PATH}/scripts/go-get-overrides.sh

    - name: Process plugin manifest overrides (public)
      shell: bash
      env:
        PLUGIN_OVERRIDES: ${{ inputs.plugin-manifest-overrides }}
        PLUGINS_MANIFEST_PATH:
          ${{ github.workspace }}/plugins/plugins.public.yaml
        ACTIONS_PATH: ${{ github.action_path }}
      run: ${ACTIONS_PATH}/scripts/plugin-overrides.sh

    - name: Tidy and Output go.mod
      shell: bash
      run: |
        echo "::group::Tidy go.mod"
        go mod tidy
        echo "::endgroup::"

        echo "::group::cat go.mod"
        cat go.mod
        echo "::endgroup::"

    - name: Build push docker image
      uses: smartcontractkit/.github/actions/build-push-docker@build-push-docker/0.7.1
      with:
        context: .
        platform: linux/amd64

        dockerfile: ${{ inputs.dockerfile }}
        docker-push: ${{ inputs.docker-push }}
        docker-build-args: |
          COMMIT_SHA=${{ github.sha }}
          CHAINLINK_USER=chainlink
          ${{ inputs.docker-additional-build-args }}
        docker-attestations: "false"
        docker-registry-url: ${{ inputs.docker-registry-url }}
        docker-repository-name: ${{ inputs.docker-repository-name }}

        docker-restore-cache:
          ${{ github.event_name == 'pull_request' || github.event_name ==
          'merge_group' }}
        docker-save-cache: ${{ github.event_name == 'push' }}

        tags: type=raw,value=${{ inputs.image-tag }}
        aws-account-number: ${{ inputs.aws-account-number }}
        aws-role-arn: ${{ inputs.aws-role-arn }}
        aws-region: ${{ inputs.aws-region }}

        github-token: ${{ steps.github-token.outputs.access-token || '' }}
